{"version":3,"sources":["redux/slices/usersSlice.js","redux/index.js","components/EditableTable/index.js","components/Chart/index.js","App.js","index.js"],"names":["usersSlice","createSlice","name","initialState","value","calculatedRR7Value","reducers","saveUsers","state","action","payload","calculateRR7days","actions","configureStore","reducer","users","usersReducer","EditableContext","React","createContext","FunctionEditableTable","dispatch","useDispatch","handleSaveUsers","array","notification","handleCalculateRR7","EditableRow","index","props","Form","useForm","form","component","Provider","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","Item","style","margin","rules","required","message","ref","onPressEnter","onBlur","className","paddingRight","onClick","EditableTable","row","newData","dataSource","findIndex","item","key","splice","setState","handleSaveOnServer","success","moment","defaultFormat","rr7returnedUsersCountAfterThenX","rr7registeredUsersMoreThanX","usersWithLivePeriod","map","user","act","last_activity_date","split","reverse","Number","reg","registration_date","now","format","diff","livePeriodInDays","toFixed","columns","width","user_id","count","this","components","body","cell","col","onCell","type","marginBottom","marginRight","rowClassName","bordered","size","Component","MyChart","useSelector","categories","setCategories","seriesData","setSeriesData","includes","push","sort","b","periodItem","usersWithThisPeriodsValues","AppChart","options","chart","id","xaxis","series","data","prevProps","length","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4a8c212d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    value: [],\n    calculatedRR7Value: null,\n  },\n  reducers: {\n    saveUsers: (state, action) => {\n      state.value = action.payload\n    },\n    calculateRR7days: (state, action) => {\n      state.calculatedRR7Value = action.payload\n    }\n  }\n})\n\nexport const { saveUsers, calculateRR7days } = usersSlice.actions\nexport default usersSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport usersReducer from './slices/usersSlice'\n\nexport default configureStore({\n  reducer: {\n    users: usersReducer\n  },\n})","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveUsers, calculateRR7days } from '../../redux/slices/usersSlice';\nimport { Table, Input, Button, Row, Form, notification } from 'antd';\nimport moment from 'moment';\n\nconst EditableContext = React.createContext(null);\n\nexport default function FunctionEditableTable () {\n  const dispatch = useDispatch()\n\n  function handleSaveUsers (array) {\n    dispatch(saveUsers(array))\n  }\n\n  function handleCalculateRR7 (value) {\n    dispatch(calculateRR7days(value))\n  }\n\n  return <EditableTable\n    handleSaveUsers={ handleSaveUsers }\n    notification={ notification }\n    handleCalculateRR7={ handleCalculateRR7 }\n  />\n}\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={ form } component={ false }>\n      <EditableContext.Provider value={ form }>\n        <tr { ...props } />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={ {\n          margin: 0,\n        } }\n        name={ dataIndex }\n        rules={ [\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ] }\n      >\n        <Input ref={ inputRef } onPressEnter={ save } onBlur={ save } />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={ {\n          paddingRight: 24,\n        } }\n        onClick={ toggleEdit }\n      >\n        { children }\n      </div>\n    );\n  }\n\n  return <td { ...restProps }>{ childNode }</td>;\n};\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'User ID',\n        dataIndex: 'user_id',\n        width: '20%',\n        editable: false,\n      },\n      {\n        title: 'Date registration',\n        dataIndex: 'registration_date',\n        width: '40%',\n        editable: true,\n      },\n      {\n        title: 'Date Last Activity',\n        dataIndex: 'last_activity_date',\n        width: '40%',\n        editable: true,\n      },\n    ];\n    this.state = {\n      dataSource: [\n        {\n          key: '1',\n          user_id: '1',\n          registration_date: '24.12.2021',\n          last_activity_date: '25.12.2021',\n        },\n        {\n          key: '2',\n          user_id: '2',\n          registration_date: '05.06.2021',\n          last_activity_date: '16.06.2021',\n        },\n        {\n          key: '3',\n          user_id: '3',\n          registration_date: '05.06.2021',\n          last_activity_date: '16.06.2021',\n        },\n        {\n          key: '4',\n          user_id: '4',\n          registration_date: '05.06.2021',\n          last_activity_date: '16.06.2021',\n        },\n        {\n          key: '5',\n          user_id: '5',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n        {\n          key: '6',\n          user_id: '6',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n        {\n          key: '7',\n          user_id: '7',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n        {\n          key: '8',\n          user_id: '8',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n      ],\n      count: 3,\n    };\n  }\n\n  handleSave = (row) => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  handleSaveOnServer = () => {\n    const { handleSaveUsers, notification } = this.props;\n    const { dataSource } = this.state;\n\n    handleSaveUsers(dataSource);\n    notification.success({\n      message: 'Таблица сохранена (консоль)',\n    })\n    // Можно считать, что будет запрос на сервер\n    // axios.post('api_url', {users: dataSource})\n  }\n\n  handleCalculateRR7 = () => {\n    const { handleCalculateRR7, handleSaveUsers } = this.props;\n    const { dataSource } = this.state;\n\n    moment.defaultFormat = \"DD.MM.YYYY\";\n\n    let rr7returnedUsersCountAfterThenX = 0;\n    let rr7registeredUsersMoreThanX = 0;\n\n    const usersWithLivePeriod = dataSource.map(user => {\n      // Вынужденный фикс, так как momentjs индексирует месяцы от 0 до 11\n      // а с сервера приходит обычная строка с 12 месяцем\n      // естественно, для большого кол-ва юзеров такое форматирование не годится\n      // в проде пришлось бы или утверждать подходящий формат (не как в ТЗ)\n      // или искать другой плагин, вместо moment\n\n      let act = user.last_activity_date\n        .split('.')\n        .reverse()\n      act[1] = Number(act[1]) - 1\n      act = moment(act);\n\n      let reg = user.registration_date\n        .split('.')\n        .reverse()\n      reg[1] = Number(reg[1]) - 1\n      reg = moment(reg);\n\n      let now = moment(moment().format())\n\n      // Если зашли на 7+ день после рега\n      if (act.diff(reg, 'days') >= 7) {\n        rr7returnedUsersCountAfterThenX += 1\n      }\n\n      if (now.diff(reg, 'days') >= 7) {\n        rr7registeredUsersMoreThanX += 1\n      }\n\n      return {\n        ...user,\n        livePeriodInDays: act.diff(reg, 'days')\n      }\n    })\n\n    console.log('rr7returnedUsersCountAfterThenX ', rr7returnedUsersCountAfterThenX)\n    console.log('rr7registeredUsersMoreThanX ', rr7registeredUsersMoreThanX)\n    console.log((rr7returnedUsersCountAfterThenX / rr7registeredUsersMoreThanX * 100).toFixed(2))\n\n    handleCalculateRR7((rr7returnedUsersCountAfterThenX / rr7registeredUsersMoreThanX * 100).toFixed(2))\n    handleSaveUsers(usersWithLivePeriod);\n\n    this.setState({\n      dataSource: usersWithLivePeriod\n    })\n  }\n\n  render () {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => {\n          return {\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }\n        },\n      };\n    });\n    return (\n      <div>\n        <Row >\n          <Button\n            onClick={ this.handleSaveOnServer }\n            type=\"primary\"\n            style={ {\n              marginBottom: 16,\n              marginRight: 16\n            } }\n          >\n            Save\n          </Button>\n\n          <Button\n            onClick={ this.handleCalculateRR7 }\n            type=\"primary\"\n            style={ {\n              marginBottom: 16,\n              marginRight: 16\n            } }\n          >\n            Calculate\n          </Button>\n        </Row>\n\n        <Table\n          components={ components }\n          rowClassName={ () => 'editable-row' }\n          bordered\n          size=\"small\"\n          dataSource={ dataSource }\n          columns={ columns }\n        />\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Chart from \"react-apexcharts\";\n\nexport default function MyChart () {\n  const users = useSelector((state) => state.users)\n\n  const [categories, setCategories] = useState([]);\n  const [seriesData, setSeriesData] = useState([]);\n\n  useEffect(() => {\n    let categories = [];\n    let seriesData = [];\n\n    console.log(users)\n\n    if (users.calculatedRR7Value) {\n      // поиск уникальных значений\n      users.value.map(user => {\n        if (!categories.includes(user.livePeriodInDays)) {\n          categories.push(user.livePeriodInDays)\n        }\n        return null\n      });\n      // соритровка по возрастанию\n      categories.sort((a, b) => a - b);\n\n      seriesData = categories.map(periodItem => {\n        let usersWithThisPeriodsValues = 0;\n        users.value.map(user => {\n          if (periodItem === user.livePeriodInDays) usersWithThisPeriodsValues += 1\n        })\n        return usersWithThisPeriodsValues\n      })\n\n      console.log(seriesData, '   ',\n        categories)\n\n      setSeriesData(seriesData);\n      setCategories(categories);\n    }\n  }, [users.value])\n\n  if (!!!users?.calculatedRR7Value) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>\n        Rolling Retention 7 day: { `${users.calculatedRR7Value}%` }\n      </h2>\n      <AppChart seriesData={ seriesData } categories={ categories } />\n    </div>\n  )\n}\n\nclass AppChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      series: [\n        {\n          name: \"Количество пользователей\",\n          data: []\n        }\n      ]\n    };\n  }\n\n  componentDidUpdate (prevProps) {\n    const { seriesData, categories } = this.props;\n\n    if (seriesData?.length !== this.state.series[0].data.length) {\n      this.setState({\n        options: {\n          ...this.state.options,\n          xaxis: {\n            ...this.state.options.xaxis,\n            categories: categories\n          }\n        },\n        series: [{\n          name: this.state.series.name,\n          data: seriesData\n        }]\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={ this.state.options }\n              series={ this.state.series }\n              type=\"bar\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport EditableTable from './components/EditableTable';\nimport Chart from './components/Chart';\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <h2>Тестовое abtest</h2>\n      <EditableTable />\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux';\n\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './assets/styles.sass';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}