{"version":3,"sources":["redux/slices/usersSlice.js","redux/index.js","firebase/config.js","firebase/index.js","components/EditableTable/index.js","components/Chart/index.js","App.js","index.js"],"names":["usersSlice","createSlice","name","initialState","value","calculatedRR7Value","reducers","saveUsers","state","action","payload","calculateRR7days","actions","configureStore","reducer","users","usersReducer","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","FbProvider","props","firebase","path","d","console","log","children","EditableContext","React","createContext","FunctionEditableTable","dispatch","useDispatch","handleSaveUsers","array","notification","handleCalculateRR7","EditableRow","index","Form","useForm","form","component","Provider","EditableCell","title","editable","dataIndex","record","handleSave","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","childNode","Item","style","margin","rules","required","message","ref","onPressEnter","onBlur","className","paddingRight","onClick","EditableTable","row","newData","dataSource","findIndex","item","key","splice","setState","handleSaveOnServer","success","moment","defaultFormat","rr7returnedUsersCountAfterThenX","rr7registeredUsersMoreThanX","usersWithLivePeriod","map","user","act","last_activity_date","split","reverse","Number","reg","registration_date","now","format","diff","livePeriodInDays","toFixed","columns","width","user_id","count","this","components","body","cell","col","onCell","type","marginBottom","marginRight","rowClassName","bordered","size","Component","MyChart","useSelector","categories","setCategories","seriesData","setSeriesData","includes","push","sort","b","periodItem","usersWithThisPeriodsValues","AppChart","options","chart","id","xaxis","series","data","prevProps","length","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.c71c6216.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    value: [],\n    calculatedRR7Value: null,\n  },\n  reducers: {\n    saveUsers: (state, action) => {\n      state.value = action.payload\n    },\n    calculateRR7days: (state, action) => {\n      state.calculatedRR7Value = action.payload\n    }\n  }\n})\n\nexport const { saveUsers, calculateRR7days } = usersSlice.actions\nexport default usersSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport usersReducer from './slices/usersSlice'\n\nexport default configureStore({\n  reducer: {\n    users: usersReducer\n  },\n})","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyA51txLU6aYM8V0rTWeL0IwokfGc6srfyI\",\n  authDomain: \"find-n.firebaseapp.com\",\n  projectId: \"find-n\",\n  storageBucket: \"find-n.appspot.com\",\n  messagingSenderId: \"60751203811\",\n  appId: \"1:60751203811:web:978d758ecdc619b5fb24d6\",\n  measurementId: \"G-92VE78VGLY\",\n  databaseURL: \"\",\n};","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  //FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  // IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\nimport { FirestoreProvider, FirestoreCollection } from \"@react-firebase/firestore\";\nimport { firebaseConfig } from './config';\n\nexport const FbProvider = (props) => {\n  return (\n    <FirebaseAuthProvider firebase={ firebase } { ...firebaseConfig }>\n      <FirestoreProvider firebase={ firebase } { ...firebaseConfig }>\n\n        {/* <button\n          data-testid=\"signin-anon\"\n          onClick={ () => {\n            firebase.auth().signInAnonymously();\n          } }\n        >\n          Анонимный вход (для получения данных с сервера firebase)\n        </button>\n        <button\n          onClick={ () => {\n            firebase.auth().signOut();\n          } }\n        >\n          Выход\n        </button> */}\n\n        {/* <FirebaseAuthConsumer>\n          { ({ isSignedIn, user, providerId }) => {\n            return (\n              <pre style={ { height: 100, overflow: \"auto\" } }>\n                { JSON.stringify({ isSignedIn }, null, 2) }\n              </pre>\n            );\n          } }\n        </FirebaseAuthConsumer> */}\n\n        <IfFirebaseAuthed>\n          <FirestoreCollection path=\"/users\" >\n            { d => console.log(d) }\n            { props.children }\n          </FirestoreCollection>\n\n        </IfFirebaseAuthed>\n      </FirestoreProvider>\n    </FirebaseAuthProvider>\n\n  )\n}","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveUsers, calculateRR7days } from '../../redux/slices/usersSlice';\nimport { Table, Input, Button, Row, Form, notification } from 'antd';\nimport moment from 'moment';\n\nconst EditableContext = React.createContext(null);\n\nexport default function FunctionEditableTable () {\n  const dispatch = useDispatch()\n\n  function handleSaveUsers (array) {\n    dispatch(saveUsers(array))\n  }\n\n  function handleCalculateRR7 (value) {\n    dispatch(calculateRR7days(value))\n  }\n\n  return <EditableTable\n    handleSaveUsers={ handleSaveUsers }\n    notification={ notification }\n    handleCalculateRR7={ handleCalculateRR7 }\n  />\n}\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={ form } component={ false }>\n      <EditableContext.Provider value={ form }>\n        <tr { ...props } />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={ {\n          margin: 0,\n        } }\n        name={ dataIndex }\n        rules={ [\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ] }\n      >\n        <Input ref={ inputRef } onPressEnter={ save } onBlur={ save } />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={ {\n          paddingRight: 24,\n        } }\n        onClick={ toggleEdit }\n      >\n        { children }\n      </div>\n    );\n  }\n\n  return <td { ...restProps }>{ childNode }</td>;\n};\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'User ID',\n        dataIndex: 'user_id',\n        width: '20%',\n        editable: false,\n      },\n      {\n        title: 'Date registration',\n        dataIndex: 'registration_date',\n        width: '40%',\n        editable: true,\n      },\n      {\n        title: 'Date Last Activity',\n        dataIndex: 'last_activity_date',\n        width: '40%',\n        editable: true,\n      },\n    ];\n    this.state = {\n      dataSource: [\n        {\n          key: '1',\n          user_id: '1',\n          registration_date: '24.12.2021',\n          last_activity_date: '25.12.2021',\n        },\n        {\n          key: '2',\n          user_id: '2',\n          registration_date: '05.06.2021',\n          last_activity_date: '16.06.2021',\n        },\n        {\n          key: '3',\n          user_id: '3',\n          registration_date: '05.06.2021',\n          last_activity_date: '16.06.2021',\n        },\n        {\n          key: '4',\n          user_id: '4',\n          registration_date: '05.06.2021',\n          last_activity_date: '16.06.2021',\n        },\n        {\n          key: '5',\n          user_id: '5',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n        {\n          key: '6',\n          user_id: '6',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n        {\n          key: '7',\n          user_id: '7',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n        {\n          key: '8',\n          user_id: '8',\n          registration_date: '05.06.2021',\n          last_activity_date: '08.06.2021',\n        },\n      ],\n      count: 3,\n    };\n  }\n\n  handleSave = (row) => {\n    console.log(row)\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  handleSaveOnServer = () => {\n    const { handleSaveUsers, notification } = this.props;\n    const { dataSource } = this.state;\n\n    handleSaveUsers(dataSource);\n    notification.success({\n      message: 'Таблица сохранена',\n    })\n    // Можно считать, что будет запрос на сервер\n    // axios.post('api_url', {users: dataSource})\n  }\n\n  handleCalculateRR7 = () => {\n    const { handleCalculateRR7, handleSaveUsers } = this.props;\n    const { dataSource } = this.state;\n\n    moment.defaultFormat = \"DD.MM.YYYY\";\n\n    let rr7returnedUsersCountAfterThenX = 0;\n    let rr7registeredUsersMoreThanX = 0;\n\n    const usersWithLivePeriod = dataSource.map(user => {\n      // Вынужденный фикс, так как momentjs индексирует месяцы от 0 до 11\n      // а с сервера приходит обычная строка с 12 месяцем\n      // естественно, для большого кол-ва юзеров такое форматирование не годится\n      // в проде пришлось бы или утверждать подходящий формат (не как в ТЗ)\n      // или искать другой плагин, вместо moment\n\n      let act = user.last_activity_date\n        .split('.')\n        .reverse()\n      act[1] = Number(act[1]) - 1\n      act = moment(act);\n\n      let reg = user.registration_date\n        .split('.')\n        .reverse()\n      reg[1] = Number(reg[1]) - 1\n      reg = moment(reg);\n\n      let now = moment(moment().format())\n\n      // Если зашли на 7+ день после рега\n      if (act.diff(reg, 'days') >= 7) {\n        rr7returnedUsersCountAfterThenX += 1\n      }\n\n      if (now.diff(reg, 'days') >= 7) {\n        rr7registeredUsersMoreThanX += 1\n      }\n\n      return {\n        ...user,\n        livePeriodInDays: act.diff(reg, 'days')\n      }\n    })\n\n    console.log(\n      'rr7returnedUsersCountAfterThenX ', rr7returnedUsersCountAfterThenX\n    )\n\n    console.log(\n      'rr7registeredUsersMoreThanX ', rr7registeredUsersMoreThanX\n    )\n\n    console.log(\n      (rr7returnedUsersCountAfterThenX / rr7registeredUsersMoreThanX * 100).toFixed(2)\n    )\n\n    handleCalculateRR7((rr7returnedUsersCountAfterThenX / rr7registeredUsersMoreThanX * 100).toFixed(2))\n    handleSaveUsers(usersWithLivePeriod);\n  }\n\n  render () {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => {\n          return {\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }\n        },\n      };\n    });\n    return (\n      <div>\n        <Row >\n          <Button\n            onClick={ this.handleSaveOnServer }\n            type=\"primary\"\n            style={ {\n              marginBottom: 16,\n              marginRight: 16\n            } }\n          >\n            Save\n          </Button>\n\n          <Button\n            onClick={ this.handleCalculateRR7 }\n            type=\"primary\"\n            style={ {\n              marginBottom: 16,\n              marginRight: 16\n            } }\n          >\n            Calculate\n          </Button>\n        </Row>\n\n        <Table\n          components={ components }\n          rowClassName={ () => 'editable-row' }\n          bordered\n          size=\"small\"\n          dataSource={ dataSource }\n          columns={ columns }\n        />\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Chart from \"react-apexcharts\";\n\nexport default function MyChart () {\n  const users = useSelector((state) => state.users)\n\n  const [categories, setCategories] = useState([]);\n  const [seriesData, setSeriesData] = useState([]);\n\n  useEffect(() => {\n    let categories = [];\n    let seriesData = [];\n\n    // поиск уникальных значений\n    users.value.map(user => {\n      if (!categories.includes(user.livePeriodInDays)) {\n        categories.push(user.livePeriodInDays)\n      }\n      return null\n    });\n    // соритровка по возрастанию\n    categories.sort((a, b) => a - b);\n\n    seriesData = categories.map(periodItem => {\n      let usersWithThisPeriodsValues = 0;\n      users.value.map(user => {\n        if (periodItem === user.livePeriodInDays) usersWithThisPeriodsValues += 1\n      })\n      return usersWithThisPeriodsValues\n    })\n\n    setSeriesData(seriesData);\n    setCategories(categories);\n  }, [users])\n\n  return (\n    <div>\n      {\n        !!users.calculatedRR7Value\n          ?\n          <>\n            <h2>\n              Rolling Retention 7 day: { `${users.calculatedRR7Value}%` }\n            </h2>\n\n          </>\n          : null\n      }\n      <AppChart seriesData={ seriesData } categories={ categories } />\n    </div>\n  )\n}\n\nclass AppChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      series: [\n        {\n          name: \"Количество пользователей\",\n          data: []\n        }\n      ]\n    };\n  }\n\n  componentDidUpdate (prevProps) {\n    const { seriesData, categories } = this.props;\n\n    if (seriesData?.length !== this.state.series[0].data.length) {\n      this.setState({\n        options: {\n          ...this.state.options,\n          xaxis: {\n            ...this.state.options.xaxis,\n            categories: categories\n          }\n        },\n        series: [{\n          name: this.state.series.name,\n          data: seriesData\n        }]\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={ this.state.options }\n              series={ this.state.series }\n              type=\"bar\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n// import { FirestoreCollection, FirestoreDocument } from \"@react-firebase/firestore\";\nimport EditableTable from './components/EditableTable';\nimport Chart from './components/Chart';\n\nfunction App () {\n  return (\n\n    <div className=\"App\">\n      <h2>Тестовое abtest</h2>\n\n      <EditableTable />\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux';\nimport { FbProvider } from './firebase';\n\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './assets/styles.sass';\n\nReactDOM.render(\n  <FbProvider>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </FbProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}